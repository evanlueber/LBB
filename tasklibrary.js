const express = require("express");
const app = express();
const port = 3000;
const session = require("express-session");

const swaggerUi = require("swagger-ui-express");
// const swaggerFile = require("./swagger_output.json");

// examples generated by chatgpt but id
let tasks = [
  {
    id: 1,
    title: "vacuuming",
    created_at: "15.06.2023",
    done_at: "16.06.2023",
  },
  {
    id: 2,
    title: "dishes",
    created_at: "14.06.2023",
    done_at: "15.06.2023",
  },
  {
    id: 3,
    title: "gaming",
    created_at: "13.06.2023",
    done_at: "13.08.2023",
  },
];

app.use(
  session({
    secret: "supersecret",
    resave: false,
    saveUninitialized: true,
    cookie: {},
  })
);

/*app.use("/swagger-ui", swaggerUi.serve, swaggerUi.setup(swaggerFile));*/
app.use(express.urlencoded({ extended: true }));
app.use(express.json());

app.get("/tasks", (req, res) => {
  res.status(200).json(tasks);
});

app.post("/tasks", (req, res) => {
  newTask = {
    id: tasks.length + 1,
    title: req.body.title,
    created_at: req.body.created_at,
    done_at: req.body.done_at || "",
  };
  tasks.push(newTask);
  res.status(201).json(newTask);
});

app.get("/tasks/:id", (req, res) => {
  const task = tasks.filter((tasks) => +tasks.id === +req.params.id)[0];
  if (!tasks) {
    res.sendStatus(404);
  } else {
    res.status(200).json(task);
  }
});

app.put("/tasks/:id", (req, res) => {
  const index = tasks.findIndex((tasks) => tasks.id === +req.params.id);
  updatedTask = {
    id: +req.params.id,
    created_at: req.body.created_at,
    done_at: req.body.done_at || "",
  };

  if (index === -1) {
    res.sendStatus(404);
  } else {
    tasks.splice(index, 1, updatedTask);
    res.status(201).json(updatedTask);
  }
});

app.delete("/tasks/:id", (req, res) => {
  const task = tasks.filter((tasks) => tasks.id === +req.params.id)[0];
  if (!task) {
    res.sendStatus(404);
  } else {
    tasks = tasks.filter((tasks) => tasks.id !== +req.params.id);
    res.status(200).json(task);
  }
});

// regex from stack overflow
const pwd = "m295";
app.post("/login", (req, res) => {
  let email = req.body.email;
  if (
    (email = email
      .toLowerCase()
      .match(
        /^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i
      ))
  ) {
    if (req.body.pwd === pwd) {
      req.session.email = req.body.email;
      res.status(200).send("Your logged in");
    } else {
      res.status(401).send("Email or password incorrect");
    }
  } else {
    res.sendStatus(401);
  }
});

app.get("/verify", (req, res) => {
  if (req.session.email) {
    res.status(200).send(email);
  } else {
    res.sendStatus(401);
  }
});

app.delete("/logout", (req, res) => {
  req.session.destroy();
  res.sendStatus(204);
});
app.listen(port, () => console.log(`App is listening on port ${port}`));
